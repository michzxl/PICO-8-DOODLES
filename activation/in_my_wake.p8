pico-8 cartridge // http://www.pico-8.com
version 29
__lua__

function _init()
	t = rnd(36000)
	t = t - t%16

	_square_points = {
		vec(1,-1),
		vec(0,-1),
		vec(-1,-1),
		vec(-1,0),
		vec(-1,1),
		vec(0,1),
		vec(1,1),
		vec(1,0),
	}

	ofs_ang = rnd(1)
	ofs_spd = 17.88
	ofs_so = 4
	ang_spread = 0.05

	pal({[0]=0,1,2,5,6,0+128,4+128,3+128,13+128,14+128,13+128,8+128,2+128,5+128,6+128,15},1)

	cols = {
		7 + 1 * 16,
		1 + 2 * 16,
		2 + 3 * 16,
		3 + 4 * 16,
		5 + 6 * 16,
		7 + 8 * 16,
		9 + 10 * 16,
		11 + 12 * 16,
		13 + 14 * 16,
	}
end

function _update()
	t += 1/30
	printh("---")

	--ofs_ang += 0.001

	if t%3<0.5 and rnd(1)<0.2 then 
		t+=0.1 
		ofs_ang += rnd(ang_spread*2)
		ofs_spd = 17.88 + rnd(ofs_so*2) - ofs_so
	end


	

	--cls()
	
	local padding = 36
	
	local ofs = vec.frompolar(ofs_ang,ofs_spd)
	local ofs_x,ofs_y = ofs.x*t,ofs.y*t
	local r_ofs_x,r_ofs_y = ofs_x\padding*padding, ofs_y\padding*padding
	local f_ofs_x = ofs_x - r_ofs_x
	local f_ofs_y = ofs_y - r_ofs_y

	local r = 12
	local n = 8
	
	local st4 = sin(t/4)

	if t%16>12 then
		local ox,oy = ofs:norm(1.2):xy()
		for i=1,500 do
			local x,y = rnd(128),rnd(128)
			local p = pget(x,y)
			circ(x-ox,y-oy,1,p)
		end
	elseif t%16<0.25 then
		for i=1,1000 do
			local x,y = rnd(128),rnd(128)
			circ(x,y,1,0)
		end
	else
		cls()
	end

	for x=f_ofs_x-r,128+r,padding do
		for y=f_ofs_y-r,128+r,padding do
			local fx,fy = x+r_ofs_x,y+r_ofs_y
			local fr = r

			local vs = {}
			for i=1,n do
				local ang = i/n
				local ang_ofs = t/8
				local ofs_s = fx/150 + 0.1*sin(t/16 + ang/8)
				local ofs_c = -flr(fy/300)
				if t%3<0.5 and rnd(1)<0.95 and flr(fx/64 + fy/72)%3==0 then
					fr = 40*st4+ang*8
					if rnd(1)<0.1 then
						ang = ang%1/2
					end
				end

				local sv = square(i,ang_ofs + ofs_s)
				local cv = circle(i,ang + ang_ofs + ofs_c)

				local t = (sin(t/8 + ofs_s/4 + y/300)/2*1.01)+0.5
				local fv = lerp(sv, cv, t)

				add(vs, fv * fr)
			end

			fillp(0b1111000011110000)
			polyv(vs, vec(x,y), cols[flr(fx/32+fy/64+t*1)%#cols+1] )
			fillp()
		end
	end
	
	--local x,y = (ofs + vec(64,64)):xy()
	--line(64,64,x,y,10)
end

function square(i, ang)
	local s = _square_points[i]
	local a,r = s:polar()
	printh(a.." "..r)
	printh(s)
	printh(vec.frompolar(a + ang,r))
	printh("")
	return vec.frompolar(a + ang,r)
end

function circle(i, ang)
	return vec.frompolar(ang,1)
end

function nsin(a)
	return (sin(a)+1)/2
end

function lerp(a,b,t)
	if t==1 then return b end
	return a + (b - a)*t
end

function line2(x1,y1,x2,y2,c)
 local num_steps=max(
  abs(flr(x2)-flr(x1)),
  abs(flr(y2)-flr(y1)))
 local dx=(x2-x1)/num_steps
 local dy=(y2-y1)/num_steps
 for i=0,num_steps do
  pset(x1,y1,c)
  x1+=dx
  y1+=dy
 end
end
line2 = line

function sqr(a) return a*a end

_const_a = 1007/1024
_const_b = 441/1024
_const_c = 5/128

vec = {
	new = function(x,y,z)
		return setmetatable({
			x=x,
			y=y,
			z=z
		},_vec)
	end,

	frompolar = function(ang,r)
		return vec(r*cos(ang), r*sin(ang))
	end,
	unit=function(rot)
		return 
			vec(1,0,0),
			vec(0,1,0),
			vec(0,0,1)
	end,
	ones=function()
		return vec(1,1,1)
	end,

	ZERO = 0.001,

	copy = function(self)
		return vec(self.x,self.y,self.z)
	end,

	polar = function(self)
		return self:ang(), #self
	end,
	ang = function(self)
		return atan2(self.x,self.y)
	end,
	r = function(self)
		return #self
	end,
	turn = function(self, ang)
		local v = self:copy()
		v:setang(self:ang() + ang)
		return v
	end,

	setc=function(self, x, y, z)
		self.x=x or 0
		self.y=y or 0
		self.z=z or 0
		return self
	end,
	set=function(self,v)
		self.x=v.x or 0
		self.y=v.y or 0
		self.z=v.z or 0
	end,
	setang = function(self,ang)
		return self:setpolar(ang, #self)
	end,
	setr = function(self, r)
		self:setpolar(self:ang(), r)
	end,
	setpolar = function(self, ang, r)
		return self:setc(r*cos(ang), r*sin(ang))
	end,

	magn = function(self)
		return #self
	end,
	sqrmagn = function(v)
		return v.x*v.x + v.y*v.y + v.z*v.z
	end,

	-- https://www.flipcode.com/archives/Fast_Approximate_Distance_Functions.shtml
	-- is only 2D
	approx_magn = function(v)
		local mmin = min(v.x,v.y)
		local mmax = max(v.x,v.y)
		return _const_a*mmax + _const_b*mmin
			- (mmax < 16*mmin and _const_c*mmax or 0)
	end, 

	norm=function(self, len)
		len = len or 1
		if self:nearzero(vec.ZERO) then
			return vec()
		else 
			return self/#self * len
		end
	end,
	perp = function(self, len)
		return vec(-self.y, self.x):norm(len)
	end,
	cross = function(A, B)
		return vec(
			A.y*B.z - A.z*B.y,
			A.z*B.x - A.x*B.z,
			A.x*B.y - A.y*B.x
		)
	end,
	dot = function(v,w)
		return v.x*w.x + v.y*w.y + v.z*w.z
	end,
	cmult = function(a,b)
		return vec(
			a.x*b.x,
			a.y*b.y,
			a.z*b.z
		)
	end,
	nonzero = function(self,unit)
		return not (self.x==0 and self.y==0 and self.z==0)
	end,
	nearzero = function(self,dist)
		return #self<dist
	end,

	constrain = function(self,anchor,dist)
		return (self - anchor):norm(dist) + anchor
	end,
	constrain_min = function(self,anchor,dist)
		local v = self - anchor
		return #v<dist and self:constrain(anchor,dist) or self
	end,
	constrain_max = function(self,anchor,dist)
		local v = self - anchor
		return #v>dist and self:constrain(anchor,dist) or self
	end,

	-- TODO: implement better version of this thing:
	xy = function(self)
		return self.x,self.y
	end,
	xyz=function(self)
		return self.x,self.y,self.z
	end,
	cx=function(self)
		return vec(self and self.x or 1,0,0)
	end,
	cy=function(self)
		return vec(0,self and self.y or 1,0)
	end,
	cz=function(self)
		return vec(0,0,self and self.z or 1)
	end,
	distr = function(self,f)
		return vec(
			f(self.x),
			f(self.y),
			f(self.z)
		)
	end,
	zip = function(self,v,f)
		return vec(
			f(self.x,v.x),
			f(self.y,v.y),
			f(self.y,v.y)
		)
	end,
	fflr = function(self, unit)
		return self:distr(function(a) 
			return fflr(a, unit or 1)
		end)
	end,
	fflrz = function(self, unit)
		local signs = self:distr(sgn)
		local fv = self:distr(abs):fflr(unit)
		return fv:cmult(signs)
	end,
	rot_x = function(v, ang)
		return vec(
			v.x, 
			v.y * cos(ang) - v.z * sin(ang), 
			v.y * sin(ang) + v.z * cos(ang)
		)
	end,
	
	rot_y = function(v, ang)
		return vec(
			v.z * sin(ang) + v.x * cos(ang), 
			v.y, 
			v.z * cos(ang) - v.x * sin(ang)
		)
	end,
	
	rot_z = function(v, ang)
		return vec(
			v.x * cos(ang) - v.y * sin(ang), 
			v.x * sin(ang) + v.y * cos(ang), 
			v.z
		)
	end,

	rot_yxz = function(v, a)
		local nv = v:copy()
		nv = vec.rot_y(nv, a.y)
		nv = vec.rot_x(nv, a.x)
		nv = vec.rot_z(nv, a.z)
		return nv
	end,

	u_rot_yxz = function(angs)
		local cx,sx,cy,sy,cz,sz = angs:cache_trig()
		local x,y,z = angs:xyz()
		local ux = vec(
			cy*cz - sy*sx*sz,
			cy*sz + sy*sx*cz,
			-sy*cx
		)
		local uy = vec(
			-cx*sz,
			cx*cz,
			sx
		)
		local uz = vec(
			sy*cz + cy*sx*sz,
			sy*sz - cy*sx*cz,
			cy*cx
		)
		return ux,uy,uz
	end,

	rrot = function(v, config, a)
		local nv = v:copy()
		for i=1,#config do
			local func = self["rot_"..sub(config, i,i)]
			nv = func(nv, a[i])
		end
		return nv
	end,

	cache_trig = function(angs)
		return 
			cos(angs.x),sin(angs.x),
			cos(angs.y),sin(angs.y),
			cos(angs.z),sin(angs.z)
	end,
}

_vec={
	__index=vec,
	__add=function(p1,p2)
		return vec(p1.x+p2.x,p1.y+p2.y,p1.z+p2.z)
	end,
	__sub=function(p1,p2)
		return vec(p1.x-p2.x,p1.y-p2.y,p1.z-p2.z)
	end,
	__mul=function(p,a)
		return vec(p.x*a,p.y*a,p.z*a)
	end,
	__div=function(p,a)
		return vec(p.x/a,p.y/a,p.z/a)
	end,
	__unm=function(p)
		return vec(-p.x,-p.y,-p.z)
	end,
	__len=function(p)
		return sqrt(sqr(p.x)+sqr(p.y)+sqr(p.z))
	end,
	__tostring=function(self)
		return "<"..flr(10*self.x)/10 ..","..flr(10*self.y)/10 ..","..flr(10*self.z)/10 ..">"
	end,
}

setmetatable(vec, {
	__call = function(self,x,y,z)
		return setmetatable({
			x=x or 0,
			y=y or 0,
			z=z or 0,
		}, _vec)
end})

function polydraw(vecs,cen,col)
	cen = cen or vec()
	for i=1,#vecs do
		local p1 = vecs[i] + cen
		local p2 = vecs[i%#vecs+1] + cen
		line2(p1.x,p1.y,p2.x,p2.y,col)
	end
end

function polyfill(points,cen,col)
	local xl,xr,ymin,ymax={},{},129,0xffff
	for k,v in ipairs(points) do
		local p1, p2 = v + cen, points[k%#points+1] + cen
		local x1,y1,x2,y2,x_array=p1.x,flr(p1.y),p2.x,flr(p2.y),xr
		if y1 == y2 then
			xl[y1],xr[y1]=min(xl[y1] or 32767,min(x1,x2)),max(xr[y1] or 0x8001,max(x1,x2))
		else
			if (y1>y2) then x_array,y1,y2,x1,x2=xl,y2,y1,x2,x1 end
			for y=y1,y2 do
				x_array[y]=flr(x1+(x2-x1)*(y-y1)/(y2-y1))
			end
		end
		ymin,ymax=min(y1,ymin),max(y2,ymax)
	end
	for y=ymin,ymax do
		rectfill(xl[y],y,xr[y],y,col)
	end
end

function polypath(vecs,cen,col)
	cen = cen or vec()
	for i=1,#vecs-1 do
		local p1 = vecs[i] + cen
		local p2 = vecs[i+1] + cen
		line2(p1.x,p1.y,p2.x,p2.y,col)
	end
end

function polycen(poly)
	local v = vec()
	for point in all(poly) do
		v = v + point
	end
	return v / #poly
end

function poly_normal(poly)
	local v1 = (poly[2] - poly[1]):norm()
	local v2 = (poly[3] - poly[2]):norm()
	return vec.cross(v1,v2)
end

	--[[
				 4____________________1 (s2,s2,s2)
			   / |                  /|
			 /                    /  |
		  /     |              /    |
		3____________________2      |
		|       |            |      |
		|                    |      |
		|       6_ _ _ _ _ _ | _ _ _5
		|     /              |     /
		|   /                |   /
		| (-s2,-s2,-s2)      | /
		7/___________________8

	--]]
function poly_cube(s)
	local s2 = s/2
	local v = {
		vec(s2,s2,s2),
		vec(s2,-s2,s2),
		vec(-s2,-s2,s2),
		vec(-s2,s2,s2),
		vec(s2,s2,-s2),
		vec(-s2,s2,-s2),
		vec(-s2,-s2,-s2),
		vec(s2,-s2,-s2),
	}
	local f = {
		{ 1,2,3,4 },
		{ 5,6,7,8 },
		{ 1,4,6,5 },
		{ 1,5,8,2 },
		{ 2,8,7,3 },
		{ 3,7,6,4 },
	}
	return f, v
end

function init_shapes() 
	local cube_f, cube_v = poly_cube(1)
	local cube = {
		f = cube_f,
		v = cube_v,
	}

	SHAPE = {
		cube = cube,
	}
	return SHAPE
end

polyv = polydraw
polyp = polypath
polyf = polyfill
__label__
00000000200000000000000000000000020000000000000500000000000000000000050000000000000000000600000666600000000000000000000000000k00
0000000010000000000000000000000001000000000000020000000000000000000002000000000000000000050000000005550000000000000000000000g000
000000000200000000000000000000000200000000000005000000000000000000000500000000000000000006000000000060000000000000000000000k0000
000000000100000000000000000000000100000000000002000000000000000000000200000000000000000005000000000050000000000000000000000g0000
0000000002000000000000000000000002000000000000050000000000000000000005000000000000000000060000000006000000000000000000000000k000
0000000001000000000000000000000001000000000000020000000000000000000020000000000000000000500000000005000000000000000000000000g000
00000000002000000000000000000000020000000000000500000000000000000000500000000000000000006000000000600000000000000000000000000k00
00000000001000000000000000000000010000000000000200000000000000000000200000000000000000050000000000500000000000000000000000000g00
000000000020000000000000000000000200000000000005000000000000000000005000000000000000000600000000006000000000000000000000000000k0
000000000010000000000000000000000100000000000002000000000000000000002000000000000000005555555500005000000000000000000000000000g0
0000000000200000000000000000000002000000000000050000000000000000000500000000000000000000000000666060000000000000000000000000000k
0000000000100000000000000000000000100000000000020000000000000000000200000000000000000000000000000550000000000000000000000000000g
00000000002000000000000000000000002000000000000500000000000000000005000000000000000000000000000000000000000000000000000000000000
00000000010000000000000000000000001000000000000200000000000000000002000000000000000000000000000000000000000000000000000000000000
00000000020000000000000000000000002000000000000500000000000000000005000000000000000000000000000000000000000000000000000000000000
00000000010000000000000000000000001000000000000222222000000000000002000000000000000000000000000000000000000000000000000000000000
00000000020000000000000000002222222000000000000000000555555500000050000000000000000000000000000000000000000000000000000000000000
00000000011111111111111111110000000000000000000000000000000022220020000000000000000000000000000000000000000000000000000000000000
00000000000000000000000000000000000000000000000000000000000000005550000000000000000000000000000000000000000000000000000000000000
00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
00000000000000000000000002222220000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
00000000000000000011111110000010000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
00000000000000022200000000000002000000000000000000000660000000000000000000000000000000000000000000000000000000000000000000000000
00000000000001100000000000000001000000000000000000005005555000000000000000000000000000000000000000000000000000000000000000000000
0000000000222000000000000000000200000000000000000000600000066600000000000000000000000000000000000000000000000000000000000000000t
00000000110000000000000000000001000000000000000000050000000000550000000000000000000000000000000000000000000000000000000000000jj0
0000000020000000000000000000000020000000000000000060000000000000660000000000000000000000000000000000000000000000000000000000t000
00000000100000000000000000000000100000000000000000500000000000000050000000000000000000000000000000000000000000000000000000jj0000
0000000002000000000000000000000020000000000000000600000000000000000660000000000000000000000000000000000000000000000000000t000000
000000000100000000000000000000001000000000000000050000000000000000000500000000000000000000gggggggg00000000000000000000000j000000
000000000200000000000000000000000200000000000000060000000000000000000600000000000000000000k000000k00000000000000000000000t000000
000000000100000000000000000000000100000000000000500000000000000000005000000000000000000000g0000000g0000000000000000000000j000000
00000000020000000000000000000000020000000000000060000000000000000000600000000000000000000k00000000k0000000000000000000000t000000
00000000010000000000000000000000010000000000000050000000000000000000500000000000000000000g00000000g000000000000000000000j0000000
00000000002000000000000000000000020000000000000060000000000000000000600000000000000000000k00000000k000000000000000000000t0000000
00000000001000000000000000000000010000000000000500000000000000000005000000000000000000000g0000000g0000000000000000000000j0000000
00000000002000000000000000000000020000000000000600000000000000000006000000000000000000000kkkk0000k0000000000000000000000t0000000
000000000010000000000000000000000100000000000005000000000000000000050000000000000000000000000ggggg00000000000000000000000j000000
00000000002000000000000000000000020000000000000066000000000000000060000000000000000000000000000000000000000000000000000000t00000
000000000001000000000000000000000100000000000000005000000000000000500000000000000000000000000000000000000000000000000000000j0000
0000000000020000000000000000000002000000000000000006600000000000060000000000000000000000000000000000000000000000000000000000tt00
000000000001000000000000000000000100000000000000000005000000000050000000000000000000000000000000000000000000000000000000000000jj
00000000000200000000000000000000220000000000000000000066000000006000000000000000000000000000000000000000000000000000000000000000
00000000000010000000000000001111000000000000000000000000550000050000000000000000000000000000000000000000000000000000000000000000
00000000000020000000000002220000000000000000000000000000006600600000000000000000000000000000000000000000000000000000000000000000
00000000000011111111111110000000000000000000000000000000000055000000000000000000000000000000000000000000000000000000000000000000
00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
00000000000000000000000222222000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
0000000000000000055555500000050000000000000000000000000000660000000000000000000000000000000000000000000000000000000000000000tttt
00000000000000022000000000000200000000000000000000000055550055000000000000000000000000000ggggggggg0000000000000000000000000j0000
0000000000000050000000000000005000000000000000000006660000000060000000000000000000000000k000000000k00000000000000000000000t00000
000000000000220000000000000000020000000000000000005000000000000550000000000000000000000g00000000000gg00000000000000000000j000000
00000000005500000000000000000005000000000000000000600000000000000660000000000000000000k00000000000000k0000000000000000000t000000
0000000002000000000000000000000020000000000000000500000000000000000500000000000000000g0000000000000000g00000000000000000j0000000
000000000500000000000000000000005000000000000000600000000000000000060000000000000000k000000000000000000k000000000000000t00000000
00000000020000000000000000000000020000000000000500000000000000000000500000000000000g0000000000000000000g00000000000000j000000000
00000000050000000000000000000000050000000000000600000000000000000000600000000000000k0000000000000000000k00000000000000t000000000
00000000020000000000000000000000020000000000005000000000000000000000500000000000000g0000000000000000000g00000000000000j000000000
00000000050000000000000000000000050000000000006000000000000000000000600000000000000k00000000000000000000k0000000000000t000000000
00000000002000000000000000000000020000000000000500000000000000000000050000000000000g00000000000000000000g0000000000000j000000000
00000000005000000000000000000000050000000000000600000000000000000000060000000000000k00000000000000000000k0000000000000t000000000
00000000002000000000000000000000020000000000000500000000000000000000050000000000000g00000000000000000000g0000000000000j000000000
00000000005000000000000000000000050000000000000600000000000000000000600000000000000k00000000000000000000k0000000000000t000000000
00000000002000000000000000000000020000000000000050000000000000000005000000000000000g0000000000000000000g00000000000000j000000000
00000000000500000000000000000000050000000000000060000000000000000060000000000000000k000000000000000000k000000000000000t000000000
000000000002000000000000000000000200000000000000500000000000000000500000000000000000gg000000000000000g00000000000000000j00000000
00000000000050000000000000000000050000000000000006600000000000000600000000000000000000k00000000000000k000000000000000000t0000000
000000000000200000000000000000022000000000000000000500000000000050000000000000000000000g000000000000g00000000000000000000jj00000
0000000000000500000000000000055000000000000000000000600000000066000000000000000000000000kk000000000k00000000000000000000000t0000
000000000000020000000000000220000000000000000000000005500055550000000000000000000000000000ggggggggg0000000000000000000000000j000
00000000000000555555555555500000000000000000000000000006660000000000000000000000000000000000000000000000000000000000000000000ttt
00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
0000000000000000066666666660000000000000000000000000kkkkkkkkkkk0000000000000000000000000000000tttt000000000000000000000000000000
000000000000000050000000000500000000000000000000000g00000000000g0000000000000000000000000jjjjj0000j000000000000000000000000000uu
00000000000000060000000000006000000000000000000000k0000000000000k00000000000000000000000t0000000000t0000000000000000000000000t00
0000000000000550000000000000050000000000000000000g000000000000000g000000000000000000000j000000000000jj0000000000000000000000u000
0000000000006000000000000000006000000000000000000k0000000000000000k0000000000000000000t000000000000000t00000000000000000000t0000
000000000005000000000000000000050000000000000000g000000000000000000g00000000000000000j00000000000000000j000000000000000000u00000
00000000006000000000000000000000600000000000000k00000000000000000000k000000000000000t0000000000000000000t0000000000000000t000000
0000000000500000000000000000000050000000000000g000000000000000000000g00000000000000j00000000000000000000j0000000000000000u000000
0000000000600000000000000000000060000000000000k000000000000000000000k00000000000000t00000000000000000000t0000000000000000t000000
0000000000500000000000000000000050000000000000g000000000000000000000g00000000000000j00000000000000000000j0000000000000000u000000
0000000000600000000000000000000060000000000000k000000000000000000000k00000000000000t00000000000000000000t0000000000000000t000000
0000000000500000000000000000000050000000000000g0000000000000000000000g0000000000000j00000000000000000000j000000000000000u0000000
0000000000600000000000000000000006000000000000k0000000000000000000000k0000000000000t00000000000000000000t000000000000000t0000000
0000000000500000000000000000000005000000000000g0000000000000000000000g0000000000000j00000000000000000000j000000000000000u0000000
0000000000600000000000000000000006000000000000k0000000000000000000000k0000000000000t00000000000000000000t000000000000000t0000000
0000000000500000000000000000000005000000000000g0000000000000000000000g0000000000000j00000000000000000000j0000000000000000u000000
0000000000600000000000000000000006000000000000k000000000000000000000k00000000000000t0000000000000000000t000000000000000000t00000
00000000000500000000000000000000500000000000000g0000000000000000000g0000000000000000j00000000000000000j00000000000000000000u0000
000000000000600000000000000000060000000000000000k00000000000000000k000000000000000000t000000000000000t0000000000000000000000t000
0000000000000550000000000000055000000000000000000gg00000000000000g00000000000000000000j00000000000000j00000000000000000000000uu0
000000000000000600000000000060000000000000000000000k000000000000k0000000000000000000000t000000000000t00000000000000000000000000t
0000000000000000500000000005000000000000000000000000g0000000000g000000000000000000000000j0000000000j0000000000000000000000000000
00000000000000000666666666600000000000000000000000000kkkkkkkkkk00000000000000000000000000tttttttttt00000000000000000000000000000
00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000

