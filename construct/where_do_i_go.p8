pico-8 cartridge // http://www.pico-8.com
version 29
__lua__

-- "complex" triangle wave, range [center - amplitude/2, center + amplitude/2]
-- to visualize -> https://www.desmos.com/calculator/lbicgo2khe
function ctriwave(x, center, amplitude, period)
    local a, b, p = amplitude or 1, center or 0, period or 1
    local core = abs((x / p - 0.25) % 1 - 0.5)
    return 2 * a * core - a / 2 + b
end

for x=0,15 do
	for y=0,15 do
		local v = x*8 + y*8*16
		mset(x,y,v)
	end
end

pal({
	2+128,
	2,
	8+128,
	8,
	9+128,
	9,
	10,
	7+128,
	7,
}, 1)

function sqr(a) return a*a end

#include vec.lua
#include poly.lua
#include tex.lua

function _init()

	t = 0
	cube = poly_cube(32)
	cube.uv = {
		{vec(3-1/8,2),vec(3-1/8,3-1/8),vec(2,3-1/8),vec(2,2)},
		{vec(3-1/8,5-1/8),vec(2,5-1/8),vec(2,4),vec(3-1/8,4)},
		{vec(3-1/8,6-1/8),vec(2,6-1/8),vec(2,5),vec(3-1/8,5)},
		{vec(4-1/8,3),vec(4-1/8,4-1/8),vec(3,4-1/8),vec(3,3)},
		{vec(3-1/8,3),vec(3-1/8,4-1/8),vec(2,4-1/8),vec(2,3)},
		{vec(2-1/8,3),vec(2-1/8,4-1/8),vec(1,4-1/8),vec(1,3)},
	}
end

function _update()
	cls()
	t += 1/30

	for i=1,1000 do
		local x,y = rnd(128),rnd(128)
		local c = x/16 + y/16 + t
		c = flr(c)
			+ -x/32 + y/32 + sin(y/16+t/8) + t
		c = ctriwave(c, 5.6, 8.8, 16)

		sset(x,y,c)
		sset(x+1,y,c)
		sset(x-1,y,c)
		sset(x,y+1,c)
		sset(x,y-1,c)
	end

	sspr(0,0,128,128)

	local angs = vec(t/8,t/8,t/8)
	local ux,uy,uz = angs:u_rot_yxz()
	local nv = {}
	for v in all(cube.v) do
		add(nv, ux*v.x + uy*v.y + uz*v.z)
	end

	for i,f in ipairs(cube.f) do
		local uv = cube.uv[i]

		local fv = {}
		for i in all(f) do
			add(fv, nv[i])
		end

		for v in all(fv) do
			if rnd(1)<0.02 then
				v:set(v + vec(rnd(8)-4,0))
			end
		end

		if rnd(1)<0.01 then
			for v in all(fv) do
				v:set(v*1.05)
			end
		end

		local normal = poly_normal(fv)
		if normal.z>0 or (t%8>4) then
			
			local x1,y1 = (fv[1]+vec(64,64)+vec(sin(t/16 + fv[1].x/16))):xy()
			local x2,y2 = (fv[2]+vec(64,64)+vec(cos(t/16 + fv[2].x/16))):xy()
			local x3,y3 = (fv[3]+vec(64,64)+vec(sin(t/16 + fv[3].x/16))):xy()
			local x4,y4 = (fv[4]+vec(64,64)+vec(cos(t/16 + fv[4].x/16))):xy()
			local x1u,y1u = (uv[1]):xy()
			local x2u,y2u = (uv[2]):xy()
			local x3u,y3u = (uv[3]):xy()
			local x4u,y4u = (uv[4]):xy()

			ttri(
				x1,y1,x2,y2,x3,y3,
				x1u,y1u,x2u,y2u,x3u,y3u
			)

			ttri(
				x3,y3,x4,y4,x1,y1,
				x3u,y3u,x4u,y4u,x1u,y1u
			)

			--polyv(fv,vec(64,64),7)
		end
	end
end

__gfx__
00000777544444450000077700000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
00007777443333440000777700000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
00077777433223340007777700000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
00777770432112340077777000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
07777700432112340777770000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
77777000433223347777700000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
77770000443333447777000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
77700000544444457770000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
__map__
0101010101010101010101010101010101010101010101010000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
0101010101010101010101010101010101010101010101010000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
0101010101010101010101010101010101010101010101010000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
0101010101010101010101010101010101010101010101010000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
0101010101010101010101010101010101010101010101010000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
0101010101010101010101010101010101010101010101010000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
0101010101010101010101010101010101010101010101010000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
0101010101010101010101010101010101010101010101010000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
0101010101010101010101010101010101010101010101010000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
0101010101010101010101010101010101010101010101010000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
